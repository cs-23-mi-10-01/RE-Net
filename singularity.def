Bootstrap: docker
From: ubuntu:18.04

%setup
    #mkdir /app/

%files
    ./environment.yml /app/environment.yml
    ./re-net/* /app/

%post
    # Set working dir
    cd /app/

    # Pre-requisite installs
    apt-get -y update
    apt-get -y install wget

    # miniconda3: get miniconda3
    wget https://repo.anaconda.com/miniconda/Miniconda3-py38_23.1.0-1-Linux-x86_64.sh -O miniconda.sh

    # install conda
    bash miniconda.sh -b -p /opt/miniconda
    export PATH="/opt/miniconda/bin:$PATH"

    # install conda environment.yml file
    echo ". /opt/miniconda/etc/profile.d/conda.sh" >> $SINGULARITY_ENVIRONMENT
    echo "conda activate $(head -1 environment.yml | cut -d' ' -f2)" >> $SINGULARITY_ENVIRONMENT
    /opt/miniconda/bin/conda env create -f environment.yml

    # Activate conda env
    . /opt/miniconda/bin/activate renet

    # Install sci-kit
    conda install -c conda-forge scikit-learn

    # Test
    echo "PWD and contents:"
    pwd
    ls
    
    cd /app/

%test
    echo "Test script"

%runscript
    echo "--- Start run ---"
    echo "executing $@"
    exec "$@"


%labels
    Author jwli21@student.aau.dk
    Version v0.0.2


#sudo singularity build --nv --sandbox renet-image singularity.def
#sudo singularity shell --pwd /app/ --nv --writable renet-image

# TO CREATE THE IMAGE ON THE CLOUD:
srun -w a256-t4-02.srv.aau.dk --gres=gpu singularity build --nv --fakeroot --sandbox renet-image-WIKI_1 singularity.def

# TO LEARN AND TEST THE MODEL ON THE CLOUD:
srun -w a256-t4-02.srv.aau.dk --gres=gpu --pty singularity shell --pwd /app/ --nv --writable renet-image-WIKI_1

export DATA=WIKI
cd data/$DATA
python3 get_history_graph.py
cd /app/
python3 pretrain.py -d $DATA --gpu 0 --dropout 0.5 --n-hidden 200 --lr 1e-3 --max-epochs 20 --batch-size 1024
python3 train.py -d $DATA --gpu 0 --dropout 0.5 --n-hidden 200 --lr 1e-3 --max-epochs 20 --batch-size 1024
